<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"	
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">
	
	<!-- <context:annotation-config/> --> <!-- @Autowired 支持自动装载bean 必须要有get方法-->	
	<!-- <context:component-scan base-package="z"/>  --><!-- @Service@Repository@Controller@Component 自动扫描成bean不用再陪-->
	
	<bean id="firsttestbeanid" scope="singleton" class="z.pub.test.SpringTest"></bean>
	
	 
</beans>
<!-- bean -->
<!-- scope="session" Spring容器会为每个独立的session创建属于自己的全新的bean -->
<!-- scope="request" 会为每个HTTP请求创建一个全新 bean-->
<!-- scope="prototype" 会为每个prototype类型的HTTP请求创建一个全新 bean-->
<!-- scope="singleton" 单例  容器一被启动他就被创建 --> 


